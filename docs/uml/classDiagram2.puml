@startuml Class Diagam

skinparam class {
    BackgroundColor LightGrey
    BorderColor Black
    ArrowColor Black
}

class DatabaseHelper {

}
DatabaseHelper --* MainActivity
DatabaseHelper --|> SQLiteOpenHelper

interface DatabaseHelperHolder {

}

class GithubCache {
    -url: String
    -content: String
    -fetchTime: long
    +getUrl(): String
    +setURL(String): void
    +getContent(): String
    +setContent(String): void
    +getFetchTime(): long
    +setFetchTime(long): void
}
GithubCache --o DatabaseHelper

class Repository {
    -owner: String
    -name: String
    -favorite: boolean
    +getOwner(): String
    +setOwner(String): void
    +getName(): String
    +setName(String): void
    +isFavorite(): boolean
    +setFavorite(boolean): void
}
Repository --o DatabaseHelper

class FirebaseChatMessage {
    -message: String
    -time: long
    -sender: String
    +getMessage(): String
    +setMessage(String): void
    +getTime(): long
    +setTime(long time): void
    +getSender(): String
    +setSender(String): void
}
FirebaseChatMessage --* MessageCard

abstract AsyncTask {

}

abstract FetchGithubTask {
    -githubWrapper: GithubWrapper
    -databaseHelper: DatabaseHelper
    +FetchGithubTask(GithubWrapper,DatabaseHelper)
    #createURL(String[]): String
    #getURLKey(String[]): String
    #doInBackground(String...): String

}
FetchGithubTask --|> AsyncTask

abstract FetchGithubListTask {
    -page: int
    #getURLKey(String[]): String
    #doInBackground(String...): String
}
FetchGithubListTask --|> FetchGithubTask

class FetchGithubIssuesTask {
    -listener: FetchGithubIssuesListener
}
FetchGithubIssuesTask --|> FetchGithubListTask
FetchGithubIssuesTask --o FetchGithubRepoItemTask

class FetchGithubPullsTask {
    -listener: FetchGithubPullsListener
}
FetchGithubPullsTask --|> FetchGithubListTask
FetchGithubPullsTask --o FetchGithubRepoItemTask

class FetchGithubRepoItemTask {
    -listener: FetchGithubRepoItemListener
}
FetchGithubRepoItemTask ..|> FetchGithubIssuesListener
FetchGithubRepoItemTask ..|> FetchGithubPullsListener

class FetchGithubRepoListTask {
    -listener: FetchGithubRepoListListener
}
FetchGithubRepoListTask --|> FetchGithubListTask

class FetchGithubRepoTask {
    -listener: FetchGithubRepoListener
}
FetchGithubRepoTask --|> FetchGithubTask

class FetchGithubUserTask {
    -listener: FetchGithubUserListener
}
FetchGithubUserTask --|> FetchGithubTask

interface FetchGithubIssuesListener {
    +onFetchGithubIssues(List<GithubIssue>): void
}
FetchGithubIssuesListener --* FetchGithubIssuesTask

interface FetchGithubPullsListener {
    +onFetchGithubPulls(List<GithubPull>): void
}
FetchGithubPullsListener --* FetchGithubPullsTask

interface FetchGithubRepoListener {
    +onFetchGithubRepo(GithubRepo): void
}
FetchGithubRepoListener --* FetchGithubRepoTask

interface FetchGithubRepoListListener {
    +onFetchGithubRepoList(List<GithubRepo>): void
}
FetchGithubRepoListListener --* FetchGithubRepoListTask

interface FetchGithubUserListener {
    +onFetchGithubUser(GithubUser): void
}
FetchGithubUserListener --* FetchGithubUserTask

interface FetchGithubRepoItemListener {
    +onFetchGithubRepoItems(List<RepoItem>): void
}
FetchGithubRepoItemListener --* FetchGithubRepoItemTask

class GithubIssue {
    -number: int
    -title: String
    -url: String
    -closed: boolean
    -user: GithubUser
    +GithubIssue(JsonObject)
}
GithubIssue ..|> RepoItem
GithubIssue --o GithubWrapper

class GithubPull {
-number: int
    -title: String
    -url: String
    -closed: boolean
    -user: GithubUser
    +GithubPull(JsonObject)
}
GithubPull ..|> RepoItem
GithubPull --o GithubWrapper

class GithubRepo {
    -name: String
    -fullName: String
    -owner: GithubUser
    -url: String
    +GithubRepo(JsonObject)
}
GithubRepo --o GithubWrapper
GithubRepo --* ChatInfoFragment

class GithubUser {
    -login: String
    -avatar_url: String
    +GithubUser(JsonObject)
    +getLogin(): String
    +getAvatarUrl(): String
}
GithubUser --o GithubWrapper
GithubUser --* GithubPull
GithubUser --* GithubIssue
GithubUser --* GithubRepo

interface RepoItem {
    +getNumber(): String
    +getTitle(): String
    +getURL(): String
    +isClosed(): boolean
    +getUser(): GithubUser
}

class GithubWrapper {
    -githubToken: String
    -databaseHelper: String
    +GithubWrapper(DatabaseHelper,String)
    +setGithubToken(String): void
    +getGithubToken(): String
    +fetchGithubUser(String,FetchGithubUserListener): void
    +fetchGithubRepo(String,FetchGithubRepoListener): void
    +fetchGithubRepoList(String,FetchGithubRepoListListener): void
    +fetchGithubRepoItems(String,FetchGithubRepoItemsListener): void
    +fetchCurrentUser(FetchGithubUserListener): void
    +fetchCurrentUserRepos(FetchGithubRepoListListener): void
    +fromObject(Object): GithubWrapper
}
GithubWrapper --* MainActivity
GithubWrapper --> GithubWrapperHolder

interface GithubWrapperHolder {
    +getGithubWrapper(): GithubWrapper
}

class PreferencesWrapper {
    -SharedPreferences: SharedPreferences
    +setString(String,String): void
    +setStringSet(String,Set<String>): void
    +setInt(String,int): void
    +setLong(String,long): void
    +setFloat(String,float): void
    +setBoolean(String,boolean): void
    +fromObject(Object): PreferencesWrapper
}
PreferencesWrapper --* MainActivity
PreferencesWrapper ..|> SharedPreferences
PreferencesWrapper --> PreferencesWrapperHolder

interface SharedPreferences {
    +getAll(): Map<String, ?>
    +getString(String,String): String
    +getStringSet(String,Set<String>): Set<String>
    +getInt(String,int): int
    +getLong(String,long): long
    +getFloat(String,float): float
    +getBoolean(String,boolean): boolean
    +contains(String): boolean
    +edit(): SharedPreferences.Editor
    +{method}...
}

interface PreferencesWrapperHolder {
    +getPreferencesWrapper(): PreferencesWrapper
}

class LoginActivity {

}

class MainActivity {

}
MainActivity ..|> PreferencesWrapperHolder
MainActivity ..|> GithubWrapperHolder
MainActivity ..|> DatabaseHelperHolder
MainActivity ..|> FetchImageListener
MainActivity ..|> FetchGithubUserListener
MainActivity --> LoginActivity

class FetchImageTask {

}
FetchImageTask --|> AsyncTask

interface FetchImageListener {
    +onFetchImage(Bitmap): void
}
FetchImageListener --* FetchImageTask

class ChatFragment {

}
ChatFragment --* MainActivity
ChatFragment --> GithubWrapper
ChatFragment ..|> FetchGithubRepoItemListener

class MessageCard {

}
MessageCard --* ChatFragment
MessageCard ..|> FetchGithubRepoItemListener
MessageCard ..|> FetchImageListener


class ChatInfoFragment {

}
ChatInfoFragment --* MainActivity
ChatInfoFragment --> GithubWrapper
ChatInfoFragment ..|> FetchGithubRepoListener

class CreateChatFragment {

}
CreateChatFragment --* MainActivity
ChatInfoFragment --> GithubWrapper
CreateChatFragment ..|> FetchGithubRepoListListener

class HomeFragment {

}
HomeFragment --* MainActivity
HomeFragment --> DatabaseHelper
HomeFragment --> GithubWrapper
HomeFragment ..|> FetchGithubRepoListener

class SettingsFragment {

}
SettingsFragment --* MainActivity


@enduml
